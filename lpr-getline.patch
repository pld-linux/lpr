--- lpr-0.72/common_source/protos.h.orig	2001-05-23 23:51:04.000000000 +0200
+++ lpr-0.72/common_source/protos.h	2020-08-22 21:22:04.236090780 +0200
@@ -44,7 +44,7 @@
 
 void fatal(const char *msg, ...);
 int getport(char *rhost, int rport);
-int getline(FILE *cfp);
+int lpr_getline(FILE *cfp);
 int getq(struct queue *(*namelist[]));
 char *checkremote(void);
 int checkfromremote(char *fromhost);
--- lpr-0.72/common_source/common.c.orig	2001-05-23 23:51:04.000000000 +0200
+++ lpr-0.72/common_source/common.c	2020-08-22 21:25:29.854976847 +0200
@@ -164,7 +164,7 @@
  * Returns 0 at EOF or the number of characters read.
  */
 int
-getline(cfp)
+lpr_getline(cfp)
 	FILE *cfp;
 {
 	register int linel = 0;
--- lpr-0.72/common_source/displayq.c.orig	2020-08-22 22:20:23.300468056 +0200
+++ lpr-0.72/common_source/displayq.c	2020-08-22 22:20:34.857072115 +0200
@@ -300,7 +300,7 @@
 	if (sendtorem || garbage || strcmp(cf, current))
 		rank++;
 	j = 0;
-	while (getline(cfp)) {
+	while (lpr_getline(cfp)) {
 		switch (line[0]) {
 		case 'P': /* Was this file specified in the user's list? */
 			if (!inlist(line+1, cf)) {
--- lpr-0.72/common_source/rmjob.c.orig	2020-08-22 22:21:05.806904445 +0200
+++ lpr-0.72/common_source/rmjob.c	2020-08-22 22:24:15.799208502 +0200
@@ -156,7 +156,7 @@
 			return(0);
 	}
 	seteuid(uid);
-	if (!getline(fp)) {
+	if (!lpr_getline(fp)) {
 		(void) fclose(fp);
 		return(0);		/* no daemon present */
 	}
@@ -194,7 +194,7 @@
 	if ((cfp = fopen(file, "r")) == NULL)
 		fatal("cannot open %s", file);
 	seteuid(uid);
-	while (getline(cfp)) {
+	while (lpr_getline(cfp)) {
 		switch (line[0]) {
 		case 'P':
 			strncpy(logname, line+1, sizeof(logname)-1);
@@ -250,7 +250,7 @@
 	if ((cfp = fopen(file, "r")) == NULL)
 		return(0);
 	seteuid(uid);
-	while (getline(cfp)) {
+	while (lpr_getline(cfp)) {
 		if (line[0] == 'P') {
 			strncpy(p, line+1, sizeof(p)-1);
 			p[sizeof(p)-1] = '\0';
--- lpr-0.72/lpc/cmds.c.orig	2001-05-17 23:53:46.000000000 +0200
+++ lpr-0.72/lpc/cmds.c	2020-08-22 22:33:56.136064547 +0200
@@ -148,7 +148,7 @@
 		seteuid(uid);
 		return;
 	}
-	if (!getline(fp) || flock(fileno(fp), LOCK_SH|LOCK_NB) == 0) {
+	if (!lpr_getline(fp) || flock(fileno(fp), LOCK_SH|LOCK_NB) == 0) {
 		(void) fclose(fp);	/* unlocks as well */
 		printf("\tno daemon to abort\n");
 		seteuid(uid);
@@ -1047,7 +1047,7 @@
 		seteuid(uid);
 		if (fp == NULL)
 			continue;
-		while (getline(fp) > 0)
+		while (lpr_getline(fp) > 0)
 			if (line[0] == 'P')
 				break;
 		(void) fclose(fp);
--- lpr-0.72/lpd/printjob.c.orig	2001-05-17 23:53:46.000000000 +0200
+++ lpr-0.72/lpd/printjob.c	2020-08-22 22:38:40.111192789 +0200
@@ -366,7 +366,7 @@
 	/* pass 0 */
 	/* Henri Gomez <gomez@slib.fr> 19991104 */
 	/* Pre scan to get the Z flags (RFC Filter Extension) */
-	while (getline(cfp))
+	while (lpr_getline(cfp))
 		switch (line[0]) {
         case 'Z':
             if (line[1] != '\0') {
@@ -388,7 +388,7 @@
 
 	/* pass 1 */
 
-	while (getline(cfp))
+	while (lpr_getline(cfp))
 		switch (line[0]) {
 		case 'H':
 			strncpy(fromhost, line+1, sizeof(fromhost) - 1);
@@ -535,7 +535,7 @@
 
 pass2:
 	fseek(cfp, 0L, 0);
-	while (getline(cfp))
+	while (lpr_getline(cfp))
 		switch (line[0]) {
 		case 'L':	/* identification line */
 			if (!SH && HL)
@@ -920,7 +920,7 @@
 	/* pass 0 */
 	/* Henri Gomez <gomez@slib.fr> 19991104 */
 	/* Pre scan to get the Z flags (RFC Filter Extension) */
-	while (getline(cfp))
+	while (lpr_getline(cfp))
 	  switch (line[0]) {
 	  case 'E':
 	    /* ignore too many options */
@@ -935,7 +935,7 @@
 	/*
 	 * pass 1
 	 */
-	while (getline(cfp)) {
+	while (lpr_getline(cfp)) {
 	again:
 	         if (line[0] == 'S') {
 		        if (dup_cfp)
@@ -999,7 +999,7 @@
 
 		        strcpy(last, line);
 			/* handle multiple copies */
-                       while ((i = getline(cfp))) {
+                       while ((i = lpr_getline(cfp))) {
                          if (dup_cfp)
                            fprintf(dup_cfp, "%s\n", line);
 				if (strcmp(last, line))
@@ -1172,7 +1172,7 @@
 		return(OK);
 	}
 
-	while (getline(cfp))
+	while (lpr_getline(cfp))
 		if (line[0] == 'U' && strchr(line+1, '/') == NULL)
 			(void) unlinkfile(line+1, from, logname);
 	/*
