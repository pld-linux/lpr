--- common_source/rmjob.c.secfix	Wed May 23 15:51:04 2001
+++ common_source/rmjob.c	Tue May 20 13:16:06 2003
@@ -312,6 +312,7 @@
 {
 	register char *cp;
 	register int i, rem;
+	size_t n;
 	char buf[BUFSIZ];
 
 	if (!sendtorem)
@@ -323,18 +324,26 @@
 	 */
 	fflush(stdout);
 
-	(void)snprintf(buf, sizeof(buf)-2, "\5%s %s", RP, all ? "-all" : person);
-	cp = buf + strlen(buf);
-	for (i = 0; i < users && cp-buf+1+strlen(user[i]) < sizeof buf - 2; i++) {
-		cp += strlen(cp);
+	/* the trailing space will be replaced with a newline later */
+	n = snprintf(buf, sizeof(buf), "\5%s %s ", RP, all ? "-all" : person);
+	if (n == -1 || n >= sizeof(buf))
+		goto bad;
+	cp = buf + n;
+	for (i = 0; i < users; i++) {
+		n = strncpy(cp, user[i], sizeof(buf) - (cp - buf + 1));
+		if (n >= sizeof(buf) - (cp - buf + 1))
+			goto bad;
+		cp += n;
 		*cp++ = ' ';
-		strcpy(cp, user[i]);
 	}
-	for (i = 0; i < requests && cp-buf+10 < sizeof(buf) - 2; i++) {
-		cp += strlen(cp);
-		(void) sprintf(cp, " %d", requ[i]);
+	*cp = '\0';
+	for (i = 0; i < requests; i++) {
+		n = snprintf(cp, sizeof(buf) - (cp - buf), "%d ", requ[i]);
+		if (n == -1 || n >= sizeof(buf) - (cp - buf))
+			goto bad;
+		cp += n;
 	}
-	strcat(cp, "\n");
+	cp[-1] = '\n';
 	rem = getport(RM,0);
 	if (rem < 0) {
 		if (from != host)
@@ -348,6 +357,10 @@
 			(void) fwrite(buf, 1, i, stdout);
 		(void) close(rem);
 	}
+	return;
+bad:
+	printf("remote buffer too large\n");
+	return;
 }
 
 /*
